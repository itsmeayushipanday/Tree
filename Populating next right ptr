/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
tc-o(n) sc-o(n)
    Node* connect(Node* root) {
        if(root == NULL) return NULL;
        queue<Node*> q;
        q.push(root);

        while(!q.empty()){
            int size = q.size();
            Node* temp = NULL; //node for pointing next

            for(int i=0; i<size; i++){
                Node* node = q.front();
                q.pop();

                if(temp != NULL){ //node have been assigned before in temp. now you got 
                //new node, so just append it
                    temp->next = node;
                }
                temp = node; //if temp is NULL, no node assign yet so just assign this 

                if(node->left) q.push(node->left);
                if(node->right) q.push(node->right);
            }
            temp->next = NULL; //done with 1 level, so point it's last node to NULL
        }
        return root;
    }
};
