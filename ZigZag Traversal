/**
 *Definition for a binary tree node.
 *struct TreeNode {
 *    int val;
 *    TreeNode * left;
 *    TreeNode * right;
 *    TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *    TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 *};
 */
class Solution
{
    public:
//tc-o(n), sc-queue-o(n), temp vec-o(n), ans-o(n)==o(n)
        bool flag = true;	//left to right
    vector<vector < int>> zigzagLevelOrder(TreeNode *root)
    {
        vector<vector < int>> ans;
        if (!root) return ans;
        queue<TreeNode*> q;
        q.push(root);

        while (!q.empty())
        {
            int size = q.size();
            vector<int> temp(size);
            for (int i = 0; i < size; i++)
            {
                TreeNode *node = q.front();
                q.pop();

                if (flag)
                {
                    temp[i] = node->val;
                }
                else
                {
                    temp[size - i - 1] = node->val;
                }

                if (node->left) q.push(node->left);
                if (node->right) q.push(node->right);
            }
            ans.push_back(temp);
            flag = !flag;
        }
        return ans;
    }
};
